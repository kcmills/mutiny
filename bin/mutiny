#!/usr/bin/env ruby
require "gli"
require "mutiny"

include GLI::App

program_desc "A tiny mutation testing framework"

flag [:l, :loads], type: Array, default_value: ['lib']
flag [:r, :requires], type: Array, default_value: [File.basename(Dir.pwd)]
flag [:p, :patterns], type: Array, default_value: ['*']

pre do |global_options|
  relevant_options = global_options.select { |k| %i(loads requires patterns).include?(k) }
  @configuration = Mutiny::Configuration.new(relevant_options)
end

desc 'Check whether your project can be used with Mutiny'
long_desc 'Checks that Mutiny can load the modules and classes you specify,
and execute test cases for each module and class'
command :check do |c|
  c.action do
    Mutiny::Mode::Check.new(@configuration).run
  end
end

desc 'Generate a set of mutants for your project'
long_desc 'Generates a set of mutants for your project and writes them to the .mutant directory'
command :mutate do |c|
  c.action do
    Mutiny::Mode::Mutate.new(@configuration).run
  end
end

exit run(ARGV)
